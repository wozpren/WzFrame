@using System.Net
@inject ILogger<ErrorDialog> Logger
@inject NavigationManager Navigation


<Modal @ref="ErrorModal" IsBackdrop="true">
    <ModalDialog Title="StatusCode">
        <BodyTemplate>
            <p>@Message</p>
            <Button OnClick="@(() => ShowStackTrace = !ShowStackTrace)" Color="Color.Link">更多 +</Button>
            @if(ShowStackTrace)
            {
                <pre>@StackTrace</pre>
            }
        </BodyTemplate>
        <FooterTemplate>
            <Button Color="Color.Primary" OnClick="@OnRefresh">刷新</Button>
        </FooterTemplate>
    </ModalDialog>
</Modal>


@code {
    [EditorRequired, Parameter]
    public Exception Exception { get; set; } = default!;

    private Modal? ErrorModal;

    private string? Message { get; set; }
    private bool ShowStackTrace { get; set; }
    private string? StackTrace { get; set; }
    private string? StatusCode { get; set; } = HttpStatusCode.InternalServerError.ToString();

    protected override void OnInitialized()
    {
        switch (Exception)
        {
            default:
                if (Exception.InnerException != null)
                {
                    while (Exception.InnerException != null)
                    {
                        Exception = Exception.InnerException;
                    }
                }
                Message = Exception.Message;
                break;
        }

        StackTrace = Exception.StackTrace;
        Logger.LogError(Exception, "{Message}. request url: {@url}", Message, Navigation.Uri);
    }

    private void OnRefresh()
    {
        Navigation.NavigateTo(Navigation.Uri, true);
    }
}
